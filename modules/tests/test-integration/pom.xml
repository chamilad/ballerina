<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~  WSO2 Inc. licenses this file to you under the Apache License,
  ~  Version 2.0 (the "License"); you may not use this file except
  ~  in compliance with the License.
  ~  You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.ballerinalang</groupId>
        <artifactId>ballerina</artifactId>
        <version>0.8.1-SNAPSHOT</version>
        <relativePath>../../../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>test-integration</artifactId>
    <name>Ballerina - Test Integration</name>

    <dependencies>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.ftpserver</groupId>
            <artifactId>ftpserver-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <!-- Base build configuration -->
    <build>
        <plugins>
            <plugin>
                <!-- Copying the activemq-all jar to the target directory, to copy it to the server distribution -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.activemq</groupId>
                                    <artifactId>activemq-all</artifactId>
                                    <version>${activemq.broker.vesion}</version>
                                    <outputDirectory>${basedir}/target/</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>commons-net</groupId>
                                    <artifactId>commons-net</artifactId>
                                    <version>${commons-net.version}</version>
                                    <outputDirectory>${basedir}/target/</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <systemPropertyVariables>
                        <server.zip>${basedir}/../../distribution/target/ballerina-${ballerina.version}.zip</server.zip>
                        <ballerina.port>9090</ballerina.port>
                    </systemPropertyVariables>
                    <suiteXmlFiles>
                        <suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
                <executions>
                    <execution>
                        <id>int-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- "integration" profile to run Docker based integration tests separately -->
        <profile>
            <id>integration</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.18.1</version>
                        <configuration>
                            <images>
                                <image>
                                    <alias>ballerinaServer</alias>
                                    <name>ballerina-test:${project.version}</name>

                                    <build>
                                        <from>openjdk:jre-alpine</from>
                                        <nocache>true</nocache>
                                        <assembly>
                                            <inline>
                                                <files>
                                                    <file>
                                                        <source>${project.parent.parent.basedir}/modules/distribution/target/ballerina-${project.version}.zip</source>
                                                        <outputDirectory>./</outputDirectory>
                                                        <destName>ballerina-dist.zip</destName>
                                                    </file>
                                                </files>
                                            </inline>
                                        </assembly>
                                        <workdir>/maven</workdir>
                                        <runCmds>
                                            <run>apk add --update bash &amp;&amp; rm -rf /var/cache/apk/* &amp;&amp; unzip /maven/ballerina-dist.zip</run>
                                        </runCmds>
                                        <ports>
                                            <port>9090</port>
                                        </ports>
                                        <cmd>
                                            <shell>
                                                /maven/ballerina-${project.version}/bin/ballerinaserver /maven/ballerina-${project.version}/samples/helloWorldService/helloWorldService.bal \
                                                /maven/ballerina-${project.version}/samples/helloWorldService/helloWorldService.bal \
                                                /maven/ballerina-${project.version}/samples/echoService/echoService.bal \
                                                /maven/ballerina-${project.version}/samples/passthroughService/passthroughService.bal \
                                                /maven/ballerina-${project.version}/samples/restfulService/ecommerceService.bal \
                                                /maven/ballerina-${project.version}/samples/routingServices/routingServices.bal \
                                                /maven/ballerina-${project.version}/samples/serviceChaining/ATMLocatorService.bal
                                            </shell>
                                        </cmd>
                                    </build>

                                    <run>
                                        <ports>
                                            <port>ballerina.port:9090</port>
                                        </ports>
                                        <wait>
                                            <log>Ballerina Server Started with </log>
                                            <time>20000</time>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-docker</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <!-- "build" should be used to create the images with the
                                         artifact -->
                                    <goal>build</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-docker</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>remove</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <!--<version>2.19.1</version>-->
                        <configuration>
                            <systemPropertyVariables>
                                <ballerina.port>${ballerina.port}</ballerina.port>
                                <profile.name>integration</profile.name>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                    <!--<plugin>-->
                        <!--<groupId>org.apache.maven.plugins</groupId>-->
                        <!--<artifactId>maven-surefire-plugin</artifactId>-->
                        <!--<configuration>-->
                            <!--<skip>true</skip>-->
                        <!--</configuration>-->
                    <!--</plugin>-->
                </plugins>
            </build>
        </profile>
    </profiles>
</project>